Lots!

make the preferences panel reopen after it's bee close

CONFIG APPLICATION:
- resolve issue with TableView focus ring bottom side near BWtoolkit widgets not visible (removed for now)
- Complete error checking in App Delegate
- Config file and application support directory needs to be root owned and perms 700
- Write Start / Stop Daemon routines
- Design and embed icon
- Remove embedded key strings where there should be constants
- convert user displayed strings to localised strings
- Customise about box
- Undo functionality (can set the change flag manually)
- Change font size for infomational labels where appropriate
- Add formatter to various entry fields to lomit field sizes
- Configure menu items
- menu item to save copies of current config (save / load menu items
- help sheet on first launch
- some more descriptive texts on table view
- boilerplate defaults
- use coredata to store the config bevuase it may well change and we will need to migrate it
- look at espionage for changes to user interface that look cooler. icons next to each service name, for example.
-		and and enabled or on/off button.
- each tab will need us to discard changes or save them, rather than simply having a big "revert" button
- check window memory management
- decide on preferences. What is a better layout to mark the computer stolen?


GENERAL:
- Write proper README file


INSTALLATION AND PACKAGING:
- Write PackageMaker
- Develop build routines 
- Add sparkle
- Write uninstallation processes in README

DAEMON:
- WHEN STOLEN, THE DAEMON WILL
	* start to log the location
	* take photos every 10 minutes
- each messing service can decide to
	* transmit each photo
	* transmit each change in location
	* periodically

Photo - how to take. How to send to Twitter. http://mashable.com/2009/05/19/twitter-share-images/
Logging - How to send to me?
How to disable the machine? Delete partition table? How can we test this?


Need to store last direct message received. Do this reliably.

encrypting the config file.
Integration with CoreLocation

What if it fails? How will the user know? Config program needs ramping up.

The Config tool needs much more work. Needs a passphrase

Design elements:
We should check twitter for direct messages when:
	External IP address changes
	Location Changes (from Core Location)
	At a time Interval (in hours)
	When 

config:
	Global Behaviour:
		twitter uid / password
		When to check for direct messages:
			time interval [xx]hours
			on change of location? []
			on external ip changing? []
		direct message password ["sadsdsds"]
	Behaviour when marked stolen:
		take pics?
			How often?
			twitter them back?	
		twitter location?
			How often?	
	RunTime persistent state
		last direct message received
		

